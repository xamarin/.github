name: Backport Trigger

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      backport_pr_number:
        description: 'Number of the pull request to backport'
        required: true
      backport_target_ref:
        description: 'Shortname for the target branch for the backport to land'
        required: true

jobs:
  launchBackportBuild:
    runs-on: windows-latest
    steps:
      # NOTE: This is one step because of a known vulnerability in workflow commands: https://bugs.chromium.org/p/project-zero/issues/detail?id=2070&can=2&q=&colspec=ID%20Type%20Status%20Priority%20Milestone%20Owner%20Summary&cells=ids
      - name: Launch ADO Backport Build
        run: |
          $eventName = "${{ github.event_name }}"
          Write-Host "Action launched by a(n) $eventName event"

          $backportPRNumber = 0
          $backportTargetBranch = ""

          if ($eventName.Equals("workflow_dispatch")) {
            # grab from input
            $backportPRNumber = "${{ github.event.inputs.backport_pr_number }}"
            $backportTargetBranch = "${{ github.event.inputs.backport_target_ref }}"
          } elseif ($eventName.Equals("issue_comment")) {
            # issue_comment event happens on both PR and issue comments -- we need to filter
            $isPR = "${{ github.event.issue.pull_request }}"

            if (($isPR -ne $null) -and (-not [System.String]::IsNullOrEmpty($isPR))) {
              # parse input
              ($botName, $backport, $backportTargetBranch) = "${{ github.event.issue.comment }}".Split(" ")
              if ($botName.Equals("@monojenkins") -and $backport.Equals("backport", [System.StringComparison]::OrdinalIgnoreCase) -and (-not [System.String]::IsNullOrEmpty($backportTargetBranch))) {
                $backportPRNumber = "${{ github.event.issue.pull_request.number }}"
              } else {
                Write-Host "Could not parse comment for backport command"
                Write-Host "Usage: @monojenkins backport TARGET_BRANCH"
                exit 0
              }
            } else {
              Write-Host "No-op: Action was launched on an issue comment, not a PR comment"
              exit 0
            }
          } else {
            throw "Unrecognized event: $eventName"
          }

          ($repoOwner, $repoName) = "${{ github.repository }}".Split("/")

          $launchURI = "https://dev.azure.com/${{ secrets.ADO_PROJECTCOLLECTION }}/${{ secrets.ADO_PROJECT }}/_apis/build/builds?api-version=6.0"
          $parameters = @{
            BackportRepoName = "$repoName";
            BackportRepoOrg = "$repoOwner";
            BackportTargetBranch = "$backportTargetBranch";
            BackportPRNumber = "$backportPRNumber"
          } | ConvertTo-Json

          $json = @{
            definition = @{ id = "${{ secrets.BACKPORT_PIPELINEID }}" };
            sourceBranch = "yaml-pipeline"; # This is hardcoded for now
            parameters = $parameters
          } | ConvertTo-Json

          Write-Host "Posting to $launchURI`:"
          Write-Host "$json"
          $encoded = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(":${{ secrets.ADO_BUILDPAT }}"))
          $headers = @{ Authorization = "Basic $encoded"}
        shell: pwsh